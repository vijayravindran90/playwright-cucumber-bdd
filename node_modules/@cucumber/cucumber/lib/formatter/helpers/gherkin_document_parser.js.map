{"version":3,"file":"gherkin_document_parser.js","sourceRoot":"","sources":["../../../src/formatter/helpers/gherkin_document_parser.ts"],"names":[],"mappings":"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","sourcesContent":["import * as messages from '@cucumber/messages'\nimport { doesHaveValue } from '../../value_checker'\n\nexport function getGherkinStepMap(\n  gherkinDocument: messages.GherkinDocument\n): Record<string, messages.Step> {\n  const result: Record<string, messages.Step> = {}\n  gherkinDocument.feature.children\n    .map(extractStepContainers)\n    .flat()\n    .forEach((x) =>\n      x.steps.forEach((step: messages.Step) => (result[step.id] = step))\n    )\n  return result\n}\n\nfunction extractStepContainers(\n  child: messages.FeatureChild\n): Array<messages.Scenario | messages.Background> {\n  if (doesHaveValue(child.background)) {\n    return [child.background]\n  } else if (doesHaveValue(child.rule)) {\n    return child.rule.children.map((ruleChild) =>\n      doesHaveValue(ruleChild.background)\n        ? ruleChild.background\n        : ruleChild.scenario\n    )\n  }\n  return [child.scenario]\n}\n\nexport function getGherkinScenarioMap(\n  gherkinDocument: messages.GherkinDocument\n): Record<string, messages.Scenario> {\n  const result: Record<string, messages.Scenario> = {}\n  gherkinDocument.feature.children\n    .map((child: messages.FeatureChild) => {\n      if (doesHaveValue(child.rule)) {\n        return child.rule.children\n      }\n      return [child]\n    })\n    .flat()\n    .forEach((x) => {\n      if (x.scenario != null) {\n        result[x.scenario.id] = x.scenario\n      }\n    })\n  return result\n}\n\nexport function getGherkinExampleRuleMap(\n  gherkinDocument: messages.GherkinDocument\n): Record<string, messages.Rule> {\n  const result: Record<string, messages.Rule> = {}\n  gherkinDocument.feature.children\n    .filter((x) => x.rule != null)\n    .forEach((x) =>\n      x.rule.children\n        .filter((child) => doesHaveValue(child.scenario))\n        .forEach((child) => (result[child.scenario.id] = x.rule))\n    )\n  return result\n}\n\nexport function getGherkinScenarioLocationMap(\n  gherkinDocument: messages.GherkinDocument\n): Record<string, messages.Location> {\n  const locationMap: Record<string, messages.Location> = {}\n  const scenarioMap: Record<string, messages.Scenario> =\n    getGherkinScenarioMap(gherkinDocument)\n  Object.keys(scenarioMap).forEach((id) => {\n    const scenario = scenarioMap[id]\n    locationMap[id] = scenario.location\n    if (doesHaveValue(scenario.examples)) {\n      scenario.examples.forEach((x) =>\n        x.tableBody.forEach(\n          (tableRow) => (locationMap[tableRow.id] = tableRow.location)\n        )\n      )\n    }\n  })\n  return locationMap\n}\n"]}