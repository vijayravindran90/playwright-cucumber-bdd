{"version":3,"file":"pickle_parser.js","sourceRoot":"","sources":["../../../src/formatter/helpers/pickle_parser.ts"],"names":[],"mappings":";;;AAAA,uEAAyE;AAkBzE,SAAgB,sBAAsB,CAAC,EACrC,MAAM,EACN,kBAAkB,GACa;IAC/B,OAAO,MAAM,CAAC,UAAU;SACrB,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;SACnC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAA;AAC5C,CAAC;AAPD,wDAOC;AAED,SAAgB,cAAc,CAAC,EAC7B,UAAU,EACV,cAAc,GACS;IACvB,OAAO,UAAU,CAAC,UAAU;SACzB,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;SAC/B,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAA;AACxC,CAAC;AAPD,wCAOC;AAED,SAAgB,gBAAgB,CAC9B,MAAuB;IAEvB,MAAM,MAAM,GAAwC,EAAE,CAAA;IACtD,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC,CAAA;IAC1E,OAAO,MAAM,CAAA;AACf,CAAC;AAND,4CAMC;AAED,SAAgB,iBAAiB,CAAC,EAChC,eAAe,EACf,MAAM,GACoB;IAC1B,MAAM,0BAA0B,GAC9B,IAAA,uDAA6B,EAAC,eAAe,CAAC,CAAA;IAChD,OAAO,0BAA0B,CAC/B,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAChD,CAAA;AACH,CAAC;AATD,8CASC","sourcesContent":["import { getGherkinScenarioLocationMap } from './gherkin_document_parser'\nimport * as messages from '@cucumber/messages'\n\nexport interface IGetPickleLocationRequest {\n  gherkinDocument: messages.GherkinDocument\n  pickle: messages.Pickle\n}\n\nexport interface IGetStepKeywordRequest {\n  pickleStep: messages.PickleStep\n  gherkinStepMap: Record<string, messages.Step>\n}\n\nexport interface IGetScenarioDescriptionRequest {\n  pickle: messages.Pickle\n  gherkinScenarioMap: Record<string, messages.Scenario>\n}\n\nexport function getScenarioDescription({\n  pickle,\n  gherkinScenarioMap,\n}: IGetScenarioDescriptionRequest): string {\n  return pickle.astNodeIds\n    .map((id) => gherkinScenarioMap[id])\n    .filter((x) => x != null)[0].description\n}\n\nexport function getStepKeyword({\n  pickleStep,\n  gherkinStepMap,\n}: IGetStepKeywordRequest): string {\n  return pickleStep.astNodeIds\n    .map((id) => gherkinStepMap[id])\n    .filter((x) => x != null)[0].keyword\n}\n\nexport function getPickleStepMap(\n  pickle: messages.Pickle\n): Record<string, messages.PickleStep> {\n  const result: Record<string, messages.PickleStep> = {}\n  pickle.steps.forEach((pickleStep) => (result[pickleStep.id] = pickleStep))\n  return result\n}\n\nexport function getPickleLocation({\n  gherkinDocument,\n  pickle,\n}: IGetPickleLocationRequest): messages.Location {\n  const gherkinScenarioLocationMap =\n    getGherkinScenarioLocationMap(gherkinDocument)\n  return gherkinScenarioLocationMap[\n    pickle.astNodeIds[pickle.astNodeIds.length - 1]\n  ]\n}\n"]}