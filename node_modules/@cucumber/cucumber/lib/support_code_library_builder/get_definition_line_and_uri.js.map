{"version":3,"file":"get_definition_line_and_uri.js","sourceRoot":"","sources":["../../src/support_code_library_builder/get_definition_line_and_uri.ts"],"names":[],"mappings":";;;;;;AAAA,gDAAuB;AACvB,sEAA4D;AAC5D,8DAAoC;AACpC,8DAA4D;AAC5D,oDAAgE;AAIhE,SAAgB,uBAAuB,CACrC,GAAW,EACX,UAAU,GAAG,yCAAoB;IAEjC,IAAI,IAAY,CAAA;IAChB,IAAI,GAAW,CAAA;IAEf,MAAM,WAAW,GAAe,qBAAU,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,iCAAY,CAAC,CAAA;IACvE,MAAM,UAAU,GAAG,WAAW,CAAC,IAAI,CACjC,CAAC,KAAe,EAAE,EAAE,CAClB,KAAK,CAAC,WAAW,EAAE,KAAK,UAAU,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CACzE,CAAA;IACD,IAAI,UAAU,IAAI,IAAI,EAAE;QACtB,IAAI,GAAG,UAAU,CAAC,aAAa,EAAE,CAAA;QACjC,GAAG,GAAG,UAAU,CAAC,WAAW,EAAE,CAAA;QAC9B,IAAI,IAAA,6BAAa,EAAC,GAAG,CAAC,EAAE;YACtB,GAAG,GAAG,cAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;SAC9B;KACF;IAED,OAAO;QACL,IAAI,EAAE,IAAA,8BAAc,EAAC,IAAI,EAAE,CAAC,CAAC;QAC7B,GAAG,EAAE,IAAA,8BAAc,EAAC,GAAG,EAAE,SAAS,CAAC;KACpC,CAAA;AACH,CAAC;AAxBD,0DAwBC","sourcesContent":["import path from 'path'\nimport { wrapCallSite } from '@cspotcode/source-map-support'\nimport stackChain from 'stack-chain'\nimport { isFileNameInCucumber } from '../stack_trace_filter'\nimport { doesHaveValue, valueOrDefault } from '../value_checker'\nimport { ILineAndUri } from '../types'\nimport CallSite = NodeJS.CallSite\n\nexport function getDefinitionLineAndUri(\n  cwd: string,\n  isExcluded = isFileNameInCucumber\n): ILineAndUri {\n  let line: number\n  let uri: string\n\n  const stackframes: CallSite[] = stackChain.callSite().map(wrapCallSite)\n  const stackframe = stackframes.find(\n    (frame: CallSite) =>\n      frame.getFileName() !== __filename && !isExcluded(frame.getFileName())\n  )\n  if (stackframe != null) {\n    line = stackframe.getLineNumber()\n    uri = stackframe.getFileName()\n    if (doesHaveValue(uri)) {\n      uri = path.relative(cwd, uri)\n    }\n  }\n\n  return {\n    line: valueOrDefault(line, 0),\n    uri: valueOrDefault(uri, 'unknown'),\n  }\n}\n"]}