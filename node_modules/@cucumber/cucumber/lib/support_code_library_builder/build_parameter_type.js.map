{"version":3,"file":"build_parameter_type.js","sourceRoot":"","sources":["../../src/support_code_library_builder/build_parameter_type.ts"],"names":[],"mappings":";;;AAAA,yEAA8D;AAG9D,SAAgB,kBAAkB,CAAC,EACjC,IAAI,EACJ,MAAM,EACN,WAAW,EACX,cAAc,EACd,oBAAoB,GACU;IAC9B,IAAI,OAAO,cAAc,KAAK,SAAS;QAAE,cAAc,GAAG,IAAI,CAAA;IAC9D,IAAI,OAAO,oBAAoB,KAAK,SAAS;QAAE,oBAAoB,GAAG,KAAK,CAAA;IAC3E,OAAO,IAAI,oCAAa,CACtB,IAAI,EACJ,MAAM,EACN,IAAI,EACJ,WAAW,EACX,cAAc,EACd,oBAAoB,CACrB,CAAA;AACH,CAAC;AAjBD,gDAiBC","sourcesContent":["import { ParameterType } from '@cucumber/cucumber-expressions'\nimport { IParameterTypeDefinition } from './types'\n\nexport function buildParameterType({\n  name,\n  regexp,\n  transformer,\n  useForSnippets,\n  preferForRegexpMatch,\n}: IParameterTypeDefinition<any>): ParameterType<any> {\n  if (typeof useForSnippets !== 'boolean') useForSnippets = true\n  if (typeof preferForRegexpMatch !== 'boolean') preferForRegexpMatch = false\n  return new ParameterType(\n    name,\n    regexp,\n    null,\n    transformer,\n    useForSnippets,\n    preferForRegexpMatch\n  )\n}\n"]}