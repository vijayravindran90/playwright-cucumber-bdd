{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/plugin/types.ts"],"names":[],"mappings":"","sourcesContent":["import { IRunEnvironment, IRunOptions } from '../api'\nimport { Envelope } from '@cucumber/messages'\nimport { ILogger } from '../logger'\n\nexport interface PluginEvents {\n  message: Envelope\n}\n\nexport interface PluginContext {\n  on: <K extends keyof PluginEvents>(\n    event: K,\n    handler: (value: PluginEvents[K]) => void\n  ) => void\n  logger: ILogger\n  configuration: IRunOptions\n  environment: IRunEnvironment\n}\n\nexport type PluginCleanup = () => any | void | Promise<any | void>\n\nexport type Plugin = (context: PluginContext) => Promise<PluginCleanup | void>\n"]}