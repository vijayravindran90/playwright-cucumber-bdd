{"version":3,"file":"convert_configuration.js","sourceRoot":"","sources":["../../src/api/convert_configuration.ts"],"names":[],"mappings":";;;AAAA,oDAIyB;AAIlB,KAAK,UAAU,oBAAoB,CACxC,iBAAiC,EACjC,GAAsB;IAEtB,OAAO;QACL,OAAO,EAAE;YACP,KAAK,EAAE,iBAAiB,CAAC,KAAK;YAC9B,cAAc,EAAE,iBAAiB,CAAC,QAAQ;YAC1C,KAAK,EAAE,iBAAiB,CAAC,IAAI;YAC7B,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,KAAK,EAAE,iBAAiB,CAAC,KAAK;SAC/B;QACD,OAAO,EAAE;YACP,cAAc,EAAE,iBAAiB,CAAC,aAAa;YAC/C,YAAY,EAAE,iBAAiB,CAAC,OAAO;YACvC,WAAW,EAAE,iBAAiB,CAAC,MAAM;SACtC;QACD,OAAO,EAAE;YACP,MAAM,EAAE,iBAAiB,CAAC,MAAM;YAChC,QAAQ,EAAE,iBAAiB,CAAC,QAAQ;YACpC,iBAAiB,EAAE,CAAC,iBAAiB,CAAC,SAAS;YAC/C,QAAQ,EAAE,iBAAiB,CAAC,QAAQ;YACpC,KAAK,EAAE,iBAAiB,CAAC,KAAK;YAC9B,cAAc,EAAE,iBAAiB,CAAC,cAAc;YAChD,MAAM,EAAE,iBAAiB,CAAC,MAAM;YAChC,eAAe,EAAE,iBAAiB,CAAC,eAAe;SACnD;QACD,OAAO,EAAE,cAAc,CAAC,iBAAiB,EAAE,GAAG,CAAC;KAChD,CAAA;AACH,CAAC;AA7BD,oDA6BC;AAED,SAAS,cAAc,CACrB,iBAAiC,EACjC,GAAsB;;IAEtB,MAAM,YAAY,GAAe,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CACrE,8BAAc,CAAC,KAAK,CAAC,IAAI,CAAC,CAC3B,CAAA;IACD,OAAO;QACL,MAAM,EACJ,MAAA,MAAA,CAAC,GAAG,YAAY,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,0CAAG,CAAC,CAAC,mCAC9D,UAAU;QACZ,KAAK,EAAE,YAAY;aAChB,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;aAChC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,EAAE;YACjC,OAAO;gBACL,GAAG,MAAM;gBACT,CAAC,MAAM,CAAC,EAAE,IAAI;aACf,CAAA;QACH,CAAC,EAAE,EAAE,CAAC;QACR,OAAO,EAAE,iBAAiB,CAAC,iBAAiB,EAAE,GAAG,CAAC;QAClD,OAAO,EAAE,iBAAiB,CAAC,aAAa;KACzC,CAAA;AACH,CAAC;AAED,SAAS,iBAAiB,CACxB,iBAAiC,EACjC,GAAsB;IAEtB,MAAM,OAAO,GAAG,YAAY,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAA;IACpD,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,KAAK,CAAA;KACb;IACD,OAAO;QACL,GAAG,EAAE,GAAG,CAAC,oBAAoB;QAC7B,KAAK,EAAE,GAAG,CAAC,sBAAsB;KAClC,CAAA;AACH,CAAC;AAED,SAAS,YAAY,CACnB,iBAAiC,EACjC,GAAsB;IAEtB,OAAO,CACL,iBAAiB,CAAC,OAAO;QACzB,IAAA,8BAAc,EAAC,GAAG,CAAC,wBAAwB,CAAC;QAC5C,GAAG,CAAC,sBAAsB,KAAK,SAAS,CACzC,CAAA;AACH,CAAC","sourcesContent":["import {\n  IConfiguration,\n  isTruthyString,\n  OptionSplitter,\n} from '../configuration'\nimport { IPublishConfig } from '../formatter'\nimport { IRunConfiguration } from './types'\n\nexport async function convertConfiguration(\n  flatConfiguration: IConfiguration,\n  env: NodeJS.ProcessEnv\n): Promise<IRunConfiguration> {\n  return {\n    sources: {\n      paths: flatConfiguration.paths,\n      defaultDialect: flatConfiguration.language,\n      names: flatConfiguration.name,\n      tagExpression: flatConfiguration.tags,\n      order: flatConfiguration.order,\n    },\n    support: {\n      requireModules: flatConfiguration.requireModule,\n      requirePaths: flatConfiguration.require,\n      importPaths: flatConfiguration.import,\n    },\n    runtime: {\n      dryRun: flatConfiguration.dryRun,\n      failFast: flatConfiguration.failFast,\n      filterStacktraces: !flatConfiguration.backtrace,\n      parallel: flatConfiguration.parallel,\n      retry: flatConfiguration.retry,\n      retryTagFilter: flatConfiguration.retryTagFilter,\n      strict: flatConfiguration.strict,\n      worldParameters: flatConfiguration.worldParameters,\n    },\n    formats: convertFormats(flatConfiguration, env),\n  }\n}\n\nfunction convertFormats(\n  flatConfiguration: IConfiguration,\n  env: NodeJS.ProcessEnv\n) {\n  const splitFormats: string[][] = flatConfiguration.format.map((item) =>\n    OptionSplitter.split(item)\n  )\n  return {\n    stdout:\n      [...splitFormats].reverse().find(([, target]) => !target)?.[0] ??\n      'progress',\n    files: splitFormats\n      .filter(([, target]) => !!target)\n      .reduce((mapped, [type, target]) => {\n        return {\n          ...mapped,\n          [target]: type,\n        }\n      }, {}),\n    publish: makePublishConfig(flatConfiguration, env),\n    options: flatConfiguration.formatOptions,\n  }\n}\n\nfunction makePublishConfig(\n  flatConfiguration: IConfiguration,\n  env: NodeJS.ProcessEnv\n): IPublishConfig | false {\n  const enabled = isPublishing(flatConfiguration, env)\n  if (!enabled) {\n    return false\n  }\n  return {\n    url: env.CUCUMBER_PUBLISH_URL,\n    token: env.CUCUMBER_PUBLISH_TOKEN,\n  }\n}\n\nfunction isPublishing(\n  flatConfiguration: IConfiguration,\n  env: NodeJS.ProcessEnv\n): boolean {\n  return (\n    flatConfiguration.publish ||\n    isTruthyString(env.CUCUMBER_PUBLISH_ENABLED) ||\n    env.CUCUMBER_PUBLISH_TOKEN !== undefined\n  )\n}\n"]}